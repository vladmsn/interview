package com.interview.dvi.model.entities;import jakarta.persistence.CascadeType;import jakarta.persistence.Column;import jakarta.persistence.Entity;import jakarta.persistence.EnumType;import jakarta.persistence.Enumerated;import jakarta.persistence.FetchType;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.OneToMany;import jakarta.persistence.PrePersist;import jakarta.persistence.PreUpdate;import jakarta.persistence.Table;import java.math.BigDecimal;import java.time.Instant;import java.util.List;import com.interview.dvi.model.enums.Status;import lombok.EqualsAndHashCode;import lombok.Getter;import lombok.NoArgsConstructor;import lombok.Setter;import org.hibernate.annotations.SQLDelete;import org.hibernate.annotations.SQLRestriction;@Getter@Setter@NoArgsConstructor@EqualsAndHashCode(of = "id")@Entity@Table(name = "inspection")@SQLRestriction("is_deleted = false")@SQLDelete(sql = "UPDATE inspection SET is_deleted = true WHERE id = ?")public class Inspection {    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Integer id;    @OneToMany(mappedBy = "inspection", fetch = FetchType.LAZY, cascade = CascadeType.ALL)    @SQLRestriction("is_deleted = false")    private List<InspectionItem> items;    private String vin;    private String note;    private String recommendation;    @Enumerated(EnumType.STRING)    private Status status = Status.DRAFT;    @Column(name = "estimated_cost")    private BigDecimal estimatedCost;    @Column(name = "created_at")    private Instant createdAt;    @Column(name = "updated_at")    private Instant updatedAt;    @Column(name = "is_deleted")    private Boolean isDeleted = false;    @PrePersist    protected void onCreate() {        createdAt = Instant.now();        updatedAt = Instant.now();    }    @PreUpdate    protected void onUpdate() {        updatedAt = Instant.now();    }    @Override    public String toString() {        return "Inspection{" +                "id=" + id +                ", vin='" + vin + '\'' +                ", note='" + note + '\'' +                ", recommendation='" + recommendation + '\'' +                ", status=" + status +                ", estimatedCost=" + estimatedCost +                ", createdAt=" + createdAt +                ", updatedAt=" + updatedAt +                ", isDeleted=" + isDeleted +                '}';    }}